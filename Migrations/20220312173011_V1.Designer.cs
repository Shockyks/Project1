// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using models;

namespace WebProjekat.Migrations
{
    [DbContext(typeof(ContextKlasa))]
    [Migration("20220312173011_V1")]
    partial class V1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("models.Aerodrom", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Grad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Aerodromi");
                });

            modelBuilder.Entity("models.Klasa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Dodatak")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Klase");
                });

            modelBuilder.Entity("models.Let", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Aerodrom1ID")
                        .HasColumnType("int");

                    b.Property<int?>("Aerodrom2ID")
                        .HasColumnType("int");

                    b.Property<int>("BrojMesta")
                        .HasColumnType("int");

                    b.Property<int>("BrojPutnika")
                        .HasColumnType("int");

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumLeta")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KlasaID")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("VremeDolaska")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("VremePolaska")
                        .HasColumnType("time");

                    b.HasKey("ID");

                    b.HasIndex("Aerodrom1ID");

                    b.HasIndex("Aerodrom2ID");

                    b.HasIndex("KlasaID");

                    b.ToTable("Letovi");
                });

            modelBuilder.Entity("models.Let", b =>
                {
                    b.HasOne("models.Aerodrom", "Aerodrom1")
                        .WithMany()
                        .HasForeignKey("Aerodrom1ID");

                    b.HasOne("models.Aerodrom", "Aerodrom2")
                        .WithMany()
                        .HasForeignKey("Aerodrom2ID");

                    b.HasOne("models.Klasa", "Klasa")
                        .WithMany()
                        .HasForeignKey("KlasaID");

                    b.Navigation("Aerodrom1");

                    b.Navigation("Aerodrom2");

                    b.Navigation("Klasa");
                });
#pragma warning restore 612, 618
        }
    }
}
